name: Deploy Evolution Backend Manager

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies (ci)
        run: npm ci

      # MOVER PRISMA GENERATE PARA ANTES DOS CHECKS
      - name: Prisma Generate
        run: npm run db:generate

      - name: Lint
        run: npm run lint:check

      - name: Type Check
        run: tsc --noEmit

      - name: Build (tsup)
        run: npm run build

      # Cria apenas o artefato essencial para deploy
      - name: Prepare distribution artifact
        run: |
          mkdir -p deploy_dist
          cp -r dist/ package.json package-lock.json deploy_dist/
          # .env será criado no destino
          # Adicione outros arquivos ESTÁTICOS necessários (ex: public/, prisma/)
          cp -r prisma deploy_dist/
          cp -r public deploy_dist/
        shell: bash

      - name: Deploy via SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST_32GB }}
          SSH_USER: ${{ secrets.SSH_USER_32GB }}
          EC2_KEY: ${{ secrets.SSH_KEY_32GB }}
          ENV: ${{ secrets.ENV_FILE }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 600 key.pem

          # Limpa e prepara o diretório
          ssh -o StrictHostKeyChecking=no -i key.pem $SSH_USER@$SSH_HOST << 'EOF'
            sudo rm -rf /var/www/typescript_app
            sudo mkdir -p /var/www/typescript_app
            sudo chown $SSH_USER:www-data /var/www/typescript_app
            sudo chmod 775 /var/www/typescript_app
          EOF

          # Rsync apenas deploy_dist (build + lock + config)
          rsync -e "ssh -o StrictHostKeyChecking=no -i key.pem" -avz ./deploy_dist/ $SSH_USER@$SSH_HOST:/var/www/typescript_app/

          # .env via variável de segredo
          ssh -o StrictHostKeyChecking=no -i key.pem $SSH_USER@$SSH_HOST << EOF
            cd /var/www/typescript_app
            echo "$ENV" > .env
            # Instala dependências só se não existirem (ideal para cold deploy)
            if [ ! -d "node_modules" ]; then
              npm ci --omit=dev
            fi
            # Prisma generate se necessário (mas normalmente já feito no build)
            # npm run db:generate
            sudo systemctl restart typescript_app.service
          EOF